version: "3.8"
services:
  api_service:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
      - "$SPRING_DOCKER_PORT:$SPRING_LOCAL_PORT"
    networks:
      - backend-net
    env_file: ../.env
    environment:
      - spring.datasource.url=jdbc:mysql://mysql_db:$MYSQL_DOCKER_PORT/$MYSQL_DATABASE?allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=$MYSQL_USER
      - spring.datasource.password=$MYSQL_PASSWORD
      - spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
      - spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
      - spring.datasource.hikari.allow-pool-suspension=true
      - spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.sql.init.mode=never
      - spring.datasource.initialization-mode=always
      - hibernate.transaction.jta.platform=MySQL
      - server.port=$SPRING_LOCAL_PORT
    depends_on:
      mysql_db:
        condition: service_healthy
  mysql_db:
    container_name: library_api_db_container
    image: "mysql:8.0"
    restart: always
    env_file: ../.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
    ports:
      - "$MYSQL_DOCKER_PORT:$MYSQL_LOCAL_PORT"
    networks:
      - backend-net
    volumes:
      - library_api_db_vol:/var/lib/mysql
    healthcheck:
      test: ["CMD", "/usr/bin/mysql", "--user=$MYSQL_USER",  "--password=$MYSQL_PASSWORD", "--execute", "SHOW DATABASES;"]
      interval: 5s
      timeout: 5s
      retries: 50
networks:
  backend-net:
volumes:
  library_api_db_vol: